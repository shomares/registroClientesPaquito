 "use strict"; /** Clase evento. * @constructor * @returns {Eventos} * @argument {string} name Nombre del Evento*/ function Eventos(name) { this.name = name; } Eventos.prototype = new Array(); Eventos.prototype.constructor = Eventos; Eventos.prototype.addEvent = function (args) { if (typeof (args) === 'function') this.push(args); }; Eventos.prototype.onEvent = function () { var args = arguments; this.forEach(function (arg) { arg.apply(null, args); }); }; /** * @constructor * @returns {ConEventos} */ function ConEventos() { } ConEventos.prototype.addManejadorEventos = function (nombre, funcion) { var props = Object.getOwnPropertyNames(this); for (var i = 0; i < props.length; i++) { if ((this[props[i]]) instanceof Eventos && this[props[i]].name === nombre) this[props[i]].addEvent(funcion); } }; function getRootWebSitePath() { return Settings.getInstance().rootURL; } 
